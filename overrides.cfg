############################################# \
######## USER CONFIG OVERRIDES FILE #########  + --> This will help you personalize my config to your printer :)
############################################# /

# This file is yours! Feel free to edit it in order to include all the needed
# things to adapt my generic config to your machine. This file will not be erased
# when updating the config using moonraker and it will be kept as you've set it.
# You can change every section of the config. You can also add some new custom macros, etc...
# The corresponding documentation can be found in: docs > overrides.md

### Also, keep in mind: if you use a multi-MCU config such as the old school double SKRs or a CANbus toolhead
### board, you will need to specify which components are connected to which board in your own mcu.cfg file!
### Example: if something is connected to the toolhead MCU, you should use "config_pin: toolhead:PIN_NAME".

#> Main control MCUs are called "mcu" (and "secondary" when using a double MCU configuration)
#> Toolhead CANboard MCUs are called "toolhead"
#> MMU/ERCF MCUs are called "mmu" 

# ------------------------------------------------------------------------------------------

[include config_backup.cfg]

#-------------------------#
#   START_PRINT SEQUENCE  #
#-------------------------#

## The START_PRINT sequence is modular and fully customizable. A default START_PRINT sequence is auto-populated based on
## your probe choice (TAP, Dockable, Inductive), but if for some reasons you still want to modify it, please uncomment the following 3
## lines to define a new `variable_startprint_actions`. You can use any number of action or even duplicate some actions if needed.
## Available actions: "bed_soak", "extruder_preheating", "chamber_soak", "extruder_heating", "tilt_calib", "z_offset", "bedmesh", "purge", "clean", "primeline"
##
# [gcode_macro _USER_VARIABLES]
# variable_startprint_actions: "action1", "action2", ...
# gcode: # do not remove this line

#-------------------------#
#   SENSORLESS HOMING     #
#-------------------------#

#[tmc2209 stepper_x]
#driver_SGTHRS: 255
#diag_pin: ^!X_STOP

#[tmc2209 stepper_y]
#driver_SGTHRS: 255
#diag_pin: ^!Y_STOP

#-------------------------#
#       INPUT SHAPER      #
#-------------------------#
#[adxl345]
#cs_pin: cartographer:PA3
#spi_bus: spi1

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    125, 125, 20

#-------------------------#
#       TMC AUTOTUNE      #
#-------------------------#

[autotune_tmc stepper_x]
motor: ldo-42sth48-2504ac
tuning_goal: silent

[autotune_tmc stepper_y]
motor: ldo-42sth48-2504ac
tuning_goal: silent

[autotune_tmc stepper_z]
motor: ldo-42sth40-1684l300e
tuning_goal: silent

[autotune_tmc stepper_z1]
motor: ldo-42sth40-1684l300e
tuning_goal: silent

[autotune_tmc stepper_z2]
motor: ldo-42sth40-1684l300e
tuning_goal: silent

#-------------------------#
#   EXTRUDER/BED PIDs     #
#-------------------------#

## Here is an example of some overrides for the PIDs. I put them here as almost everyone will use them,
## so just uncomment the following lines and change the values according to your own machine
[extruder]
control: pid
pid_kp: 24.659
pid_ki: 2.163
pid_kd: 70.274
sensor_type: ATC Semitec 104NT-4-R025H42G
pullup_resistor: 2200 # 2.2K

[heater_bed]
control: pid
pid_kp: 64.099
pid_ki: 2.273
pid_kd: 451.895

#-------------------------#
#   X&Y MOTOR SETTINGS    #
#-------------------------#

[stepper_x]
endstop_pin: toolhead:X_STOP
dir_pin: !X_DIR
#homing_speed: 60

[stepper_y]
endstop_pin: Y_STOP
dir_pin: !Y_DIR
#homing_speed: 60

#-------------------------#
#   Z MOTORS DIRECTION    #
#-------------------------#

## Here is an example of some overrides for the motor directions as it's a pretty common one. If you need
## to invert the Z1 or Z3 motor direction on your machine, just uncomment the following lines.
[stepper_z]
dir_pin: !Z_DIR

[stepper_z1]
dir_pin: !Z1_DIR

[stepper_z2]
dir_pin: !Z2_DIR

#-------------------------#
#       CARTOGRAPHER      #
#-------------------------#
[scanner]
serial: /dev/serial/by-id/usb-Cartographer_614e_13002E001443565537353020-if00
x_offset: 0                          
#adjust for your offset
y_offset: 15                         
#adjust for your offset
calibration_method: touch 
sensor: cartographer
sensor_alt: carto
#alternate name to call commands. CARTO_TOUCH etc
scanner_touch_z_offset: 0.05         
#this is the default and will be overwritten and added to the DO NOT SAVE area by using UI to save z offset

[bed_mesh]
zero_reference_position: 125, 125    
# set this to themiddle of your bed

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    125, 125, 20



