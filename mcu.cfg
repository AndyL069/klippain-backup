######################################################### \
#### User MCU and TMCs wiring definition file ###########  + --> Everything MCU related :)
######################################################### /

# This file is yours: keep in mind that it will not be erased when updating
# the config using moonraker and it will be kept as you've set it.

# Put here all your wiring definitions, your MCU serial port, CANbus UUID, etc...
# It should be populated automatically with some default wiring templates during
# the first time install of the config if you choose to do so when asked by the
# script. If it's not the case, you will need to manually define all your
# [board_pins] section. You can use the pinout documentation here: ./docs/pinout.md

# ------------------------------------------------------------------------------------------


#-------------------------#
#   TMCs DRIVERS          #
#-------------------------#

# ---------------------------------------------------------------------- AXIS DRIVERS ----> optional, but only one line per axis need to be selected
### 1. X Drivers -------------------------------------------------------------------------
[include config/hardware/axis/X/TMC/TMC2209.cfg]
# [include config/hardware/axis/X/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/X/TMC/TMC2240.cfg]
# [include config/hardware/axis/X/TMC/TMC5160.cfg]
### 2. Y Drivers -------------------------------------------------------------------------
[include config/hardware/axis/Y/TMC/TMC2209.cfg]
# [include config/hardware/axis/Y/TMC/TMC2209_V0specific.cfg] # Should only be used for early LDO V0 kits to mitigate the known VFAs issue
# [include config/hardware/axis/Y/TMC/TMC2240.cfg]
# [include config/hardware/axis/Y/TMC/TMC5160.cfg]
### 3. Z Drivers -------------------------------------------------------------------------
#[include config/hardware/axis/Z/TMC/TMC2209_1-Motor.cfg]
[include config/hardware/axis/Z/TMC/TMC2209_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2209_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC2240_4-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_1-Motor.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_3-Motors.cfg]
# [include config/hardware/axis/Z/TMC/TMC5160_4-Motors.cfg]
# ----------------------------------------------------------------------------------------


# ------------------------------------------------------------------- EXTRUDER DRIVER ----> optional, but only one line need to be selected
### --------------------------------------------------------------------------------------
[include config/hardware/extruder/TMC/TMC2209.cfg]
# [include config/hardware/extruder/TMC/TMC2240.cfg]
# ----------------------------------------------------------------------------------------

#---------------------------------------------#
#### BTT Manta M8P v2.0 MCU definition ########
#---------------------------------------------#

[mcu]
##--------------------------------------------------------------------
# This board works by using a serial connection by default. If you
# want to use CAN, invert the commented lines and use canbus_uuid.

serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_3B0030000351313433343333-if00

# canbus_uuid: change-me-to-the-correct-canbus-id
##--------------------------------------------------------------------

[include config/mcu_definitions/main/BTT_Manta_M8P_v2.0.cfg] # Do not remove this line
[board_pins mantam8p20_mcu]
mcu: mcu
aliases:
    X_STEP=MCU_M1_STEP  , X_DIR=MCU_M1_DIR  , X_ENABLE=MCU_M1_EN  , X_TMCUART=MCU_M1_CS  ,
    Y_STEP=MCU_M2_STEP  , Y_DIR=MCU_M2_DIR  , Y_ENABLE=MCU_M2_EN  , Y_TMCUART=MCU_M2_CS  ,

    Z_STEP=MCU_M3_STEP  , Z_DIR=MCU_M3_DIR  , Z_ENABLE=MCU_M3_EN  , Z_TMCUART=MCU_M3_CS  ,
    Z1_STEP=MCU_M4_STEP , Z1_DIR=MCU_M4_DIR , Z1_ENABLE=MCU_M4_EN , Z1_TMCUART=MCU_M4_CS ,
    Z2_STEP=MCU_M5_STEP , Z2_DIR=MCU_M5_DIR , Z2_ENABLE=MCU_M5_EN , Z2_TMCUART=MCU_M5_CS ,
    Z3_STEP=MCU_M6_STEP , Z3_DIR=MCU_M6_DIR , Z3_ENABLE=MCU_M6_EN , Z3_TMCUART=MCU_M6_CS ,

    E_STEP=MCU_M7_STEP  , E_DIR=MCU_M7_DIR  , E_ENABLE=MCU_M7_EN  , E_TMCUART=MCU_M7_CS  ,

    DRIVER_SPI_MOSI=MCU_M_SPI_MOSI , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_MISO=MCU_M_SPI_MISO , # Used in case of SPI drivers such as TMC2240 or TMC5160
    DRIVER_SPI_SCK=MCU_M_SPI_SCK   , # Used in case of SPI drivers such as TMC2240 or TMC5160

    X_STOP=MCU_M1_STOP , Y_STOP=MCU_M2_STOP , Z_STOP=MCU_M3_STOP ,
    PROBE_INPUT=MCU_PROBE2 ,
    RUNOUT_SENSOR=MCU_FWS1 ,

    E_HEATER=MCU_HE0       , E_TEMPERATURE=MCU_TH0   ,
    BED_HEATER=MCU_BED_OUT , BED_TEMPERATURE=MCU_THB , 

    PART_FAN=MCU_FAN0 , E_FAN=MCU_FAN1 ,
    CONTROLLER_FAN=MCU_FAN2 ,
    EXHAUST_FAN=MCU_FAN3 ,
    FILTER_FAN=MCU_FAN4 ,
    HOST_CONTROLLER_FAN=MCU_FAN5 ,

    CHAMBER_TEMPERATURE=MCU_TH1 ,
    ELECTRICAL_CABINET_TEMPERATURE=MCU_TH2 ,

    LIGHT_OUTPUT=MCU_HE2 ,
    STATUS_NEOPIXEL=MCU_RGB1 ,
    LIGHT_NEOPIXEL=MCU_M5_STOP ,

    SERVO_PIN=MCU_PROBE1 ,


[neopixel skirt_lights]
pin: STATUS_NEOPIXEL
chain_count: 24
initial_RED: 0
initial_GREEN: 1.0
initial_BLUE: 1.0

#----------------------------------------------------------#
#### LDO Nitehawk 36 USB v1.0 RP2040 MCU definition ########
#----------------------------------------------------------#

[mcu toolhead]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_rp2040_4E4735313109AD50-if00
##--------------------------------------------------------------------

# If you want to override the wiring of the BTT EBB SB2209 CAN v1.0 RP2040, keep in mind that this
# board is defined using the "toolhead" name. So you should use "pin: toolhead:PIN_NAME"
# in your own overrides.cfg files.

[include LDO_Nitehawk_36.cfg] # Do not remove this line
[board_pins nhk36_mcu]
mcu: toolhead
aliases:
    E_STEP=MCU_EMOT_STEP , E_DIR=MCU_EMOT_DIR , E_ENABLE=MCU_EMOT_EN , E_TMCUART=MCU_EMOT_UART ,

    X_STOP=MCU_ENDSTOP_X ,
    
    PROBE_INPUT=MCU_PROBE ,
    
    E_HEATER=MCU_HEAT , E_TEMPERATURE=MCU_TEMP , 

    TOOLHEAD_SENSOR=MCU_FS ,
    
    PART_FAN=MCU_FAN1 , E_FAN=MCU_FAN0 ,
    
    STATUS_NEOPIXEL=MCU_RGB ,
    
    ADXL_CS=MCU_ADXL_CS , ADXL_SCLK=MCU_ADXL_SCK , ADXL_MOSI=MCU_ADXL_MOSI , ADXL_MISO=MCU_ADXL_MISO ,


#------------------------------------------------------#
#        LDO Nitehawk 36 v1.0 RP2040 pins remapping    #
#------------------------------------------------------#

# These pins overrides are automatically added when you select a CANbus
# toolhead MCU during the installation process. They should provide a
# good base to work with. Feel free to adapt to your board if needed!

[extruder]
step_pin: toolhead:E_STEP
dir_pin: toolhead:E_DIR
enable_pin: !toolhead:E_ENABLE
heater_pin: toolhead:E_HEATER
sensor_pin: toolhead:E_TEMPERATURE
## For PT100/PT1000
# sensor_type: MAX31865
# sensor_pin: toolhead:MCU_31865_CS
# spi_software_sclk_pin: toolhead:MCU_31865_CLK
# spi_software_mosi_pin: toolhead:MCU_31865_MOSI
# spi_software_miso_pin: toolhead:MCU_31865_MISO
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[fan]
pin: toolhead:PART_FAN

[heater_fan hotend_fan]
pin: toolhead:E_FAN

[neopixel status_leds]
pin: toolhead:STATUS_NEOPIXEL

[tmc2209 extruder]
uart_pin: toolhead:E_TMCUART



#-----------------------------------------------#
#### BTT MMB CAN board MCU definition ###########
#-----------------------------------------------#

#[mcu mmu]
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/change-me-to-the-correct-mcu-path
# canbus_uuid: change-me-to-the-correct-canbus-id
##--------------------------------------------------------------------

# If you want to override the wiring of the BTT MMB CAN board, keep in mind that this
# board is defined using the "mmu" name. So you should use "pin: mmu:PIN_NAME"
# in your own overrides.cfg files.

#[include config/mcu_definitions/mmu/BTT_MMB_CAN_v1.0.cfg] # Do not remove this line
#[board_pins mmu_mcu]
#mcu: mmu
#aliases:
#    MMU_GEAR_STEP=MCU_M1_STEP  , MMU_GEAR_DIR=MCU_M1_DIR  , MMU_GEAR_ENABLE=MCU_M1_EN  , MMU_GEAR_UART=MCU_M1_UART  ,
#    MMU_SEL_STEP=MCU_M2_STEP   , MMU_SEL_DIR=MCU_M2_DIR   , MMU_SEL_ENABLE=MCU_M2_EN   , MMU_SEL_UART=MCU_M2_UART   ,
    
#    MMU_GEAR_DIAG=MCU_STP1 , # Shared with MCU_STP1
#    MMU_SEL_DIAG=MCU_STP2  , # Shared with MCU_STP2

#    MMU_SEL_ENDSTOP=MCU_STP11  ,

#    MMU_SERVO=MCU_MOT          ,
#    MMU_ENCODER=MCU_SENSOR     ,
#    MMU_NEOPIXEL=MCU_RGB       ,
#    # MMU_GATE_SENSOR=MCU_STP1  , # (if not GEAR DIAG!)

#    MMU_PRE_GATE_0=MCU_STP3    ,
#    MMU_PRE_GATE_1=MCU_STP4    ,
#    MMU_PRE_GATE_2=MCU_STP5    ,
#    MMU_PRE_GATE_3=MCU_STP6    ,
#    MMU_PRE_GATE_4=MCU_STP7    ,
#    MMU_PRE_GATE_5=MCU_STP8    ,
#    MMU_PRE_GATE_6=MCU_STP9    ,
#    MMU_PRE_GATE_7=MCU_STP10   ,
#    # MMU_PRE_GATE_8=""          ,
#    # MMU_PRE_GATE_9=""          ,
#    # MMU_PRE_GATE_10=""         ,
#    # MMU_PRE_GATE_11=""         ,

#    SPI_SCLK=MCU_SCK , SPI_MOSI=MCU_MOSI , SPI_MISO=MCU_MISO ,

    ## I2C header
#    I2C_SDA=MCU_I2C_SDA  , I2C_SCL=MCU_I2C_SCL  , I2C_GND=<GND>  , I2C_5V=<5V>  ,

    ## SWD header
#    SWD_Reset=<RST> , SWD_PA14=MCU_SWD_PA14 , SWD_GND=<GND> , SWD_PA13=MCU_SWD_PA13 , SWD_3.3V=<3.3V> ,

